#!/bin/bash

################################################################################
# Globals                                                                      #
################################################################################
amount=5
length=30
symbols="alnum"

################################################################################
# Help                                                                         #
################################################################################
Help()
{
   # Display Help
   echo "Usage: g-password-gen [options]"
   echo "A simple password generator"
   echo
   echo "Options:"
   echo "  -h     Print this help"
   echo "  -n     Non-interactive password generation with default settings"
   echo
}

################################################################################
# Process the input options                                                    #
################################################################################
# Get the options
while getopts ":hn" option; do
   case $option in
      h) # Display help
         Help
         exit;;
      n) # Non-interactive password generation
         password=$(tr -cd "[:${symbols}:]" < /dev/urandom | fold -w${length} | head -n1)
         echo "$password"
         exit;;
     \?) # Incorrect option
         echo "Error: Invalid option"
         exit;;
   esac
done

################################################################################
# Print banner                                                                 #
################################################################################
echo "   ______    ______            __    ";
echo "  / ____/   /_  __/___  ____  / /____";
echo " / / ________/ / / __ \/ __ \/ / ___/";
echo "/ /_/ /_____/ / / /_/ / /_/ / (__  ) ";
echo "\____/     /_/  \____/\____/_/____/  ";
echo "                                     ";

echo "Password Generator (https://github.com/glenndehaan/bash-utils)"
echo

################################################################################
# Ask options                                                                  #
################################################################################
read -p 'Number of password to generate [5]: ' amount
amount=${amount:-5}

read -p 'Password length [30]: ' length
length=${length:-30}

read -r -p 'Do you want to include symbols? [y/N]: ' response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]
then
    symbols="graph"
else
    symbols="alnum"
fi

################################################################################
# Generate passwords                                                           #
################################################################################
echo

for (( c=1; c<=amount; c++ ))
do
    password=$(tr -cd "[:${symbols}:]" < /dev/urandom | fold -w${length} | head -n1)
    echo "Password $c: $password"
done
